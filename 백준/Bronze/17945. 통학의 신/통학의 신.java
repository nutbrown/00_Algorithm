import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		// x^2 + 2Ax + B = 0의 근을 모두 출력
		int A = sc.nextInt();
		int B = sc.nextInt();
		
		// 근의 공식을 몰라도 풀 수 있어야 한다
		// 저번에는 x의 범위를 잡는 게 어려워서 못했다 -> 정말 대략적으로 해보기

		// A,B의 범위가 -1000 ~ 1000다.
		// x가 +-10,000이라면
		// 100,000,000 + 20,000 A + B = 0
		// 100,000,000 - 20,000 A + B = 0
		// -> A,B가 아무리 커도 안 된다. x가 이것보다는 절댓값이 작아야지

		// x가 +-5,000이라면
		// 25,000,000 + 5,000 A + B = 0
		// 25,000,000 - 5,000 A + B = 0
		// -> A,B가 아무리 커도 안 된다. x가 이것보다는 절댓값이 작아야지

		// x가 +-4,000이라면
		// 16,000,000 + 4,000 A + B = 0
		// 16,000,000 - 4,000 A + B = 0
		// -> A,B가 아무리 커도 안 된다. x가 이것보다는 절댓값이 작아야지

		// x가 +-3,000이라면
		// 9,000,000 + 3,000 A + B = 0
		// 9,000,000 - 3,000 A + B = 0
		// -> A,B가 아무리 커도 안 된다. x가 이것보다는 절댓값이 작아야지

		// x가 +-2,000이라면
		// 4,000,000 + 2,000 A + B = 0
		// 4,000,000 - 2,000 A + B = 0
		// -> A,B가 아무리 커도 안 된다. x가 이것보다는 절댓값이 작아야지

		// x가 +-1,000이라면
		// 1,000,000 + 1,000 A + B = 0
		// 1,000,000 - 1,000 A + B = 0
		// -> 이제 좀 근접하다. 1000은 아슬하다
		
		for(int i = -1 * 2000; i <= 2000; i++) {
			if((i * i + 2 * A * i + B) == 0) System.out.print(i + " ");
		}
		
		
		
		// 진짜 모르겠으니 엣지케이스 4가지 다 해보기
		// x^2 + 2Ax = -B
		
		// x^2 - 2000x = +1000
		// x가 2000이면 좌변이 0이 된다. +1000일 경우 x가 그것보다는 커야된다
		// x가 3000이면 좌변이 3,000,000이 된다. x가 이것보다는 작아야하니까 그 사이
		// x가 음수면 -1만 되어도 2000으로 우변보다 무조건 커진다

		// x^2 - 2000x = -1000
		// x가 2000이면 좌변이 0이 된다. -1000일 경우 x가 그것보다는 작아야한다
		// x가 1000이면 좌변 우변이 같아지네
		
		// x^2 + 2000x = +1000
		// x가 -2000이면 좌변이 0이 된다. +1000일 경우 x가 그것보다는 절댓값이 커져야하는데
		// x가 -3000이면 좌변이 +3000이 되어서. 그 사이다
		
		// x^2 + 2000x = -1000
		// x가 -1000이면 좌변 우변이 같아지네
		
		// 아 그런데 이 접근이 맞는지는 진짜 모르겠네
	}
}